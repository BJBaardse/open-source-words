fugitive vim im not going to lie to you fugitive vim may very well be the best git wrapper of all time check out these features view any blob tree commit or tag in the repository with gedit and gsplit gvsplit gtabedit edit a file in the index and write to it to stage the changes use gdiff to bring up the staged version of the file side by side with the working tree version and use vims diff handling capabilities to stage a subset of the files changes bring up the output of git status with gstatus press to add reset a files changes or p to add reset patch and guess what gcommit does gblame brings up an interactive vertical split with git blame output press enter on a line to edit the commit where the line changed or o to open it in a split when youre done use gedit in the historic buffer to go back to the work tree version gmove does a git mv on a file and simultaneously renames the buffer gdelete does a git rm on a file and simultaneously deletes the buffer use ggrep to search the work tree or any arbitrary commit with git grep skipping over that which is not tracked in the repository glog loads all previous revisions of a file into the quickfix list so you can iterate over them and watch the file evolve gread is a variant of git checkout filename that operates on the buffer rather than the filename this means you can use u to undo it and you never get any warnings about the file changing outside vim gwrite writes to both the work tree and index versions of a file making it like git add when called from a work tree file and like git checkout when called from the index or a blob in history use gbrowse to open the current file on the web front end of your favorite hosting provider with optional line range try it in visual mode built in support is provided for git instaweb and plugins are available for popular providers such as github gitlab and bitbucket add fugitivestatusline to statusline to get an indicator with the current branch in surprise your statusline last but not least theres git for running any arbitrary command and git to open the output of a command in a temp file screencasts a complement to command line git working with the git index resolving merge conflicts with vimdiff browsing the git object database exploring the history of a git repository installation if you dont have a preferred installation method one option is to install pathogen vim and then copy and paste cd vim bundle git clone https github com tpope vim fugitive git vim u none c helptags vim fugitive doc c q if your vim version is below 7 2 i recommend also installing vim git for syntax highlighting and other git niceties faq why dont any of the commands exist fugitive cares about the current file not the current working directory edit a file from the repository to avoid the blank window problem favor commands like split and tabedit over commands like new and tabnew heres a patch that automatically opens the quickfix window after ggrep this is a great example of why i recommend asking before patching there are valid arguments to be made both for and against automatically opening the quickfix window whenever i have to make an arbitrary decision like this i ask what vim would do and vim does not open a quickfix window after grep luckily its easy to implement the desired behavior without changing fugitive vim the following autocommand will cause the quickfix window to open after any grep invocation autocmd quickfixcmdpost grep cwindow self promotion like fugitive vim follow the repository on github and vote for it on vim org and if youre feeling especially charitable follow tpope on twitter and github license copyright c tim pope distributed under the same terms as vim itself see help license