handlebars js handlebars provides the power necessary to let you build semantic templates effectively with no frustration handlebars is largely compatible with mustache templates in most cases it is possible to swap out mustache with handlebars and continue using your current templates checkout the official handlebars docs site at http www handlebarsjs com and the live demo at http tryhandlebarsjs com installing see our installation documentation usage in general the syntax of handlebars js templates is a superset of mustache templates for basic syntax check out the mustache manpage once you have a template use the handlebars compile method to compile the template into a function the generated function takes a context argument which will be used to render the template js var source hello my name is name i am from hometown i have kids length kids kids name is age kids var template handlebars compile source var data name alan hometown somewhere tx kids name jimmy age 12 name sally age 4 var result template data would render hello my name is alan i am from somewhere tx i have 2 kids jimmy is 12 sally is 4 full documentation and more examples are at handlebarsjs com precompiling templates handlebars allows templates to be precompiled and included as javascript code rather than the handlebars template allowing for faster startup time full details are located here differences between handlebars js and mustache handlebars js adds a couple of additional features to make writing templates easier and also changes a tiny detail of how partials work nested paths helpers block expressions literal values delimited comments block expressions have the same syntax as mustache sections but should not be confused with one another sections are akin to an implicit each or with statement depending on the input data and helpers are explicit pieces of code that are free to implement whatever behavior they like the mustache spec defines the exact behavior of sections in the case of name conflicts helpers are given priority compatibility there are a few mustache behaviors that handlebars does not implement handlebars deviates from mustache slightly in that it does not perform recursive lookup by default the compile time compat flag must be set to enable this functionality users should note that there is a performance cost for enabling this flag the exact cost varies by template but its recommended that performance sensitive operations should avoid this mode and instead opt for explicit path references the optional mustache style lambdas are not supported instead handlebars provides its own lambda resolution that follows the behaviors of helpers handlebars does not allow space between the opening and a command character such as or the command character must immediately follow the braces so for example partial is allowed but partial is not alternative delimiters are not supported supported environments handlebars has been designed to work in any ecmascript 3 environment this includes node js chrome firefox safari 5 opera 11 ie 6 older versions and other runtimes are likely to work but have not been formally tested the compiler requires json stringify to be implemented natively or via a polyfill if using the precompiler this is not necessary performance in a rough performance test precompiled handlebars js templates in the original version of handlebars js rendered in about half the time of mustache templates it would be a shame if it were any other way since they were precompiled but the difference in architecture does have some big performance advantages justin marney a k a gotascii confirmed that with an independent test the rewritten handlebars current version is faster than the old version with many performance tests being 5 to 7 times faster than the mustache equivalent upgrading see release notes md for upgrade notes known issues see faq md for known issues and common pitfalls handlebars in the wild assemble by jonschlinkert and doowb is a static site generator that uses handlebars js as its template engine cory by leo is another tiny static site generator coschedule an editorial calendar for wordpress that uses handlebars js dashbars a modern helper library for handlebars js ember js makes handlebars js the primary way to structure your views also with automatic data binding support ghost just a blogging platform handlebars assets a rails asset pipeline gem from les hill leshill handlebars helpers is an extensive library with 100 handlebars helpers handlebars layouts is a set of helpers which implement extendible and embeddable layout blocks as seen in other popular templating languages hbs an express js view engine adapter for handlebars js from don park koa hbs koa generator based renderer for handlebars js jblotus created http tryhandlebarsjs com for anyone who would like to try out handlebars js in their browser jquery plugin allows you to use handlebars js with jquery lumbar provides easy module based template management for handlebars projects marionette handlebars adds support for handlebars and mustache templates to marionette sammy js by aaron quint a k a quirkey supports handlebars js as one of its template plugins sproutcore uses handlebars js as its main templating engine extending it with automatic data binding support yui implements a port of handlebars swag by elving is a growing collection of helpers for handlebars js give your handlebars js templates some swag son dombars is a dom based templating engine built on the handlebars parser and runtime deprecated promised handlebars is a wrapper for handlebars that allows helpers to return promises just handlebars helpers a fully tested lightweight package with common handlebars helpers incremental bars adds support for incremental dom as template target to handlebars external resources gist about synchronous and asynchronous loading of external handlebars templates have a project using handlebars send us a pull request license handlebars js is released under the mit license