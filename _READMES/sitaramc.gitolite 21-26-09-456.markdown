gitolite readme about this readme github users click the wiki link before sending me anything via github this is a minimal readme for gitolite so you can quickly get started with installing gitolite on a fresh userid on a unix like machine using ssh learning enough to do some basic access control for anything more you need to look at the complete documentation at http gitolite com gitolite please go there for what why how concepts background troubleshooting more details on what is covered here advanced features not covered here migration from older gitolite running gitolite over http rather than ssh and many more topics assumptions you are familiar with os at least one unix like os ssh ssh ssh keys ssh authorized keys file git basic use of git bare and non bare remotes you are setting up a fresh ssh based installation of gitolite on a unix machine of some sort you have root access or someone has created a userid called git for you to use and given you a password for it this is a brand new userid or you have deleted everything but bashrc and similar files to make it look like one if your server is not connected to the internet you know how to clone the gitolite source code by using some in between server or git bundle installation and setup server requirements any unix system sh git 1 6 6 or later perl 5 8 8 or later openssh 5 0 or later a dedicated userid to host the repos in this document we assume it is git but it can be anything substitute accordingly this user id does not currently have any ssh pubkey based access ideally this user id has shell access only by su git from some other userid on the same server this ensure minimal confusion for ssh newbies steps to install first prepare the ssh key login to git on the server make sure ssh authorized keys is empty or non existent make sure your ssh public key from your workstation has been copied as home yourname pub next install gitolite by running these commands git clone https github com sitaramc gitolite mkdir p home bin gitolite install to home bin finally setup gitolite with yourself as the administrator gitolite setup pk yourname pub if the last command doesnt run perhaps bin is not in your path you can either add it or just run home bin gitolite setup pk yourname pub if you get any other errors please refer to the online documentation whose url was given at the top of this file adding users and repos do not add new repos or users manually on the server gitolite users repos and access rules are maintained by making changes to a special repo called gitolite admin and pushing those changes to the server to administer your gitolite installation start by doing this on your workstation if you have not already done so git clone git host gitolite admin note if you are asked for a password something went wrong go hit the link for the complete documentation earlier in this file now if you cd gitolite admin you will see two subdirectories in it conf and keydir to add new users alice bob and carol obtain their public keys and add them to keydir as alice pub bob pub and carol pub respectively to add a new repo foo and give different levels of access to these users edit the file conf gitolite conf and add lines like this repo foo rw alice rw bob r carol once you have made these changes do something like this git add conf git add keydir git commit m added foo gave access to alice bob carol git push when the push completes gitolite will add the new users to ssh authorized keys on the server as well as create a new empty repo called foo help for your users once a user has sent you their public key and you have added them as specified above and given them access you have to tell them what url to access their repos at this is usually git clone git host reponame see man git clone for other forms note again if they are asked for a password something is wrong if they need to know what repos they have access to they just have to run ssh git host info access rule examples gitolites access rules are very powerful the simplest use was already shown above here is a slightly more detailed example repo foo rw alice master bob refs tags v 0 9 bob rw bob rw refs tags v 0 9 carol r dave heres what these example rules say alice can do anything to any branch or tag create push delete rewind overwrite etc bob can create or fast forward push any branch whose name does not start with master and create any tag whose name does not start with v digit carol can create tags whose names start with v digit dave can clone fetch please see the main documentation linked above for all the gory details as well as more features and examples groups gitolite allows you to group users or repos for convenience heres an example that creates two groups of users staff alice bob carol interns ashok repo secret rw staff repo foss rw staff rw interns group lists accumulate the following two lines have the same effect as the earlier definition of staff above staff alice bob staff carol you can also use group names in other group names all devs staff interns finally all is a special group name that is often convenient to use if you really mean all repos or all users commands users can run certain commands remotely using ssh running ssh git host help prints a list of available commands the most commonly used command is info all commands respond to a single argument of h with suitable information if you have shell on the server you have a lot more commands available to you try running gitolite help license contact and support please see http gitolite com gitolite contact for mailing list and irc info license the gitolite software is copyright sitaram chamarty and is licensed under the gpl v2 please see the file called copying in the source distribution please see http gitolite com gitolite license for more note git is a trademark of software freedom conservancy and my use of gitolite is under license