git flow a collection of git extensions to provide high level repository operations for vincent driessens branching model getting started for the best introduction to get started with git flow please read jeff kreeftmeijers blog post http jeffkreeftmeijer com 2010 why arent you using git flow or have a look at one of these screen casts how to use a scalable git branching model called git flow by build a module a short introduction to git flow by mark derricutt on the path with git flow by dave bock installing git flow see the wiki for up to date installation instructions integration with your shell for those who use the bash or zsh shell please check out the excellent work on the git flow completion project by bobthecow it offers tab completion for all git flow subcommands and branch names faq see the faq section of the project wiki please help out this project is still under development feedback and suggestions are very welcome and i encourage you to use the issues list on github to provide that feedback feel free to fork this repo and to commit your additions for a list of all contributors please see the authors file any questions tips or general discussion can be posted to our google group http groups google com group gitflow users contributing fork the repository then run git clone recursive git github com username gitflow git cd gitflow git branch master origin master git flow init d git flow feature start your feature then do work and commit your changes hint export path pwd path from within the gitflow directory makes sure youre using the version of gitflow youre currently developing git flow feature publish your feature when done open a pull request to your feature branch license terms git flow is published under the liberal terms of the bsd license see the license file although the bsd license does not require you to share any modifications you make to the source code you are very much encouraged and invited to contribute back your modifications to the community preferably in a github fork of course initialization to initialize a new repo with the basic branch structure use git flow init d this will then interactively prompt you with some questions on which branches you would like to use as development and production branches and how you would like your prefixes be named you may simply press return on any of those questions to accept the sane default suggestions the d flag will accept all defaults creating feature release hotfix support branches to list start finish feature branches use git flow feature git flow feature start name base git flow feature finish name for feature branches the base arg must be a commit on develop to push pull a feature branch to the remote repository use git flow feature publish name git flow feature pull remote name to list start finish release branches use git flow release git flow release start release base git flow release finish release for release branches the base arg must be a commit on develop to list start finish hotfix branches use git flow hotfix git flow hotfix start release base git flow hotfix finish release for hotfix branches the base arg must be a commit on master to list start support branches use git flow support git flow support start release base for support branches the base arg must be a commit on master showing your appreciation a few people already requested it so now its here a flattr button of course the best way to show your appreciation for the original blog post or the git flow tool itself remains contributing to the community if youd like to show your appreciation in another way however consider flattring me